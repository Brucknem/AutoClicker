<Window x:Class="AutoClicker.MainWindow"
        x:Name="mainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:core="clr-namespace:System;assembly=mscorlib"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:autoclicker="clr-namespace:AutoClicker"
        mc:Ignorable="d"
        Title="Auto Clicker" Height="500" Width="900" Background="White">

    <Window.Resources>
        <!--<Style TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>-->
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="DataGridCell">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <autoclicker:ValueToEqualsParameterConverter x:Key="TextBoxConverter"/>
        <autoclicker:ComboBoxConverter x:Key="ComboBoxConverter"/>
        <ObjectDataProvider x:Key="Types" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="autoclicker:InstructionType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="Keys" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="autoclicker:VirtualKeyCode"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="ButtonTypes" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="autoclicker:ButtonType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>
    
    <!--<Border Padding="5 0 5 5">-->
    <DockPanel LastChildFill="True">

        <Grid DockPanel.Dock="Top">
            <Rectangle Height="0.5" Fill="Black"/>
        </Grid>
        <Menu DockPanel.Dock="Top" Padding="0 2" >
            <MenuItem Header="_File">
                <MenuItem Header="_Open" Click="Open_Click"/>
                <MenuItem Header="_Save" Click="Save_Click"/>
                <Separator/>
                <MenuItem Header="_Close" Click="Close_Click"/>
            </MenuItem>
            <!--<Separator/>-->
            <MenuItem Header="_Edit">
                <MenuItem Header="Clear" Click="Clear_Click"/>
            </MenuItem>
        </Menu>
        <Grid DockPanel.Dock="Top">
            <Rectangle Height="0.5" Fill="Black"/>
        </Grid>

        <Grid DockPanel.Dock="Top" Margin="5 10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="0.5*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Horizontal" Grid.Column="0" VerticalAlignment="Center">
                <ToggleButton x:Name="PlayButton" BorderThickness="0" Background="Transparent" IsChecked="{Binding ElementName=mainWindow, Path=IsRunning, Mode=TwoWay}" Padding="2" Margin="5 0" Width="35" Height="35">
                    <Image Source="Images/play.png" RenderOptions.BitmapScalingMode="HighQuality">
                        <Image.ToolTip>
                            <ToolTip>
                                <TextBlock Text="Start playing the script."/>
                            </ToolTip>
                        </Image.ToolTip>
                    </Image>
                </ToggleButton>
                <ToggleButton x:Name="RecordButton" BorderThickness="0" Background="Transparent" IsChecked="{Binding ElementName=mainWindow, Path=IsRecording, Mode=TwoWay}" Padding="2" Margin="5 0" Width="35" Height="35">
                    <Image Source="Images/record2.png" RenderOptions.BitmapScalingMode="HighQuality">
                        <Image.ToolTip>
                            <ToolTip>
                                <TextBlock Text="Start recording some instructions."/>
                            </ToolTip>
                        </Image.ToolTip>
                    </Image>
                </ToggleButton>
                <ToggleButton x:Name="WithDelayButton" BorderThickness="0" Background="Transparent" IsChecked="{Binding ElementName=mainWindow, Path=WithDelay, Mode=TwoWay}" Padding="2" Margin="5 0" Width="35" Height="35">
                    <Image Source="Images/stopwatch2.png" RenderOptions.BitmapScalingMode="HighQuality">
                        <Image.ToolTip>
                            <ToolTip>
                                <TextBlock Text="Enable delay measurement between instructions."/>
                            </ToolTip>
                        </Image.ToolTip>
                    </Image>
                </ToggleButton>
                <!--<CheckBox x:Name="RecordWithDelayCheckBox" IsChecked="{ Binding ElementName=mainWindow, Path=WithDelay, Mode=TwoWay}" VerticalAlignment="Center" Content="With Delay" Margin="5 2"/>-->
            </StackPanel>

            <TextBlock Foreground="Black" FontSize="16" Grid.Column="1" Text="Auto Clicker" FontWeight="Bold" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center"/>

            <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                <TextBox x:Name="RepetitionsTextBox" IsEnabled="False" TextChanged="RepetitionsTextBox_TextChanged" Text="5" MaxLength="5" VerticalAlignment="Center" Width="40" TextAlignment="Right" Padding="2"/>

                <ToggleButton x:Name="InfiniteButton" BorderThickness="0" Background="Transparent" IsChecked="{Binding ElementName=mainWindow, Path=Infinite, Mode=TwoWay}" Padding="2" Margin="5 0" Width="35" Height="35">
                    <Image Source="Images/infinity.png" RenderOptions.BitmapScalingMode="HighQuality">
                        <Image.ToolTip>
                            <ToolTip>
                                <TextBlock Text="Enable infinite looping."/>
                            </ToolTip>
                        </Image.ToolTip>
                    </Image>
                </ToggleButton>
                <!--<CheckBox x:Name="InfiniteCheckBox" IsChecked="{Binding ElementName=mainWindow, Path=Infinite, Mode=TwoWay}" VerticalAlignment="Center" Margin="5 0" Content="Infinite"/>-->
            </StackPanel>
        </Grid>
        
        <DataGrid DockPanel.Dock="Top" x:Name="InstructionsDataGrid" 
                      AutoGenerateColumns="False"
                      CanUserAddRows="false"
                      CanUserSortColumns="False"
                      CanUserReorderColumns="False"
                      VerticalScrollBarVisibility="Visible"
                      ItemsSource="{Binding ElementName=mainWindow, Path=Instructions}"
                      AllowDrop="True"
                      Drop="InstructionsDataGrid_Drop"
                      Margin="5"
                      >
            
            <ItemsControl.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="_Mouse">
                        <MenuItem Header="_Normal" Click="AddClick_Click"/>
                        <MenuItem Header="_Drag" Click="AddDrag_Click"/>
                        <MenuItem Header="_Wheel" Click="AddWheel_Click"/>
                    </MenuItem>
                    <MenuItem Header="_Keyboard" Click="AddKeyboard_Click"/>
                    <MenuItem Header="_Loop">
                        <MenuItem Header="_Start" Click="AddLoop_Click"/>
                        <MenuItem Header="_End" Click="AddEndLoop_Click"/>
                    </MenuItem>
                    <MenuItem Header="_Delay" Click="AddDelay_Click"/>
                    <Separator/>
                    <MenuItem Header="Duplicate" Click="DuplicateFromContextMenu_Click"/>
                    <MenuItem Header="Delete" Click="DeleteFromContextMenu_Click"/>
                </ContextMenu>
            </ItemsControl.ContextMenu>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsRunning}" Value="True">
                            <Setter Property="Background" Value="Black"></Setter>
                            <Setter Property="Foreground" Value="White"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsRunning}" Value="False">
                            <Setter Property="Background" Value="White"></Setter>
                            <Setter Property="Foreground" Value="Black"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.Columns>
                <!--<DataGridComboBoxColumn Header="Type" x:Name="TypeColumn" Width="3*" SelectedValueBinding="{Binding Type}" ItemsSource="{Binding Source={StaticResource Types}}"/>-->
                <DataGridTemplateColumn Header="Type" x:Name="TypeColumn" Width="*"  MinWidth="100" TextElement.FontStretch="Expanded">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox SelectedValue="{Binding Path=Type, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" ItemsSource="{Binding Source={StaticResource Types}}" MinWidth="100" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                
                <DataGridTextColumn Header="Delay" x:Name="DelayColumn"  Binding="{Binding Delay}" Width="*" MinWidth="50">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="InstructionsDataGrid_PreviewMouseLeftButtonDown"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition>
                                            <Condition.Binding>
                                                <Binding Path="Type" Converter="{StaticResource TextBoxConverter}" >
                                                    <Binding.ConverterParameter>
                                                        <autoclicker:InstructionType>CLICK</autoclicker:InstructionType>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Condition.Binding>
                                            <Condition.Value>
                                                <core:Boolean>False</core:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                        <Condition>
                                            <Condition.Binding>
                                                <Binding Path="Type" Converter="{StaticResource TextBoxConverter}" >
                                                    <Binding.ConverterParameter>
                                                        <autoclicker:InstructionType>WHEEL</autoclicker:InstructionType>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Condition.Binding>
                                            <Condition.Value>
                                                <core:Boolean>False</core:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                        <Condition>
                                            <Condition.Binding>
                                                <Binding Path="Type" Converter="{StaticResource TextBoxConverter}" >
                                                    <Binding.ConverterParameter>
                                                        <autoclicker:InstructionType>DELAY</autoclicker:InstructionType>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Condition.Binding>
                                            <Condition.Value>
                                                <core:Boolean>False</core:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                        <Condition>
                                            <Condition.Binding>
                                                <Binding Path="Type" Converter="{StaticResource TextBoxConverter}" >
                                                    <Binding.ConverterParameter>
                                                        <autoclicker:InstructionType>DRAG</autoclicker:InstructionType>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Condition.Binding>
                                            <Condition.Value>
                                                <core:Boolean>False</core:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                        <Condition>
                                            <Condition.Binding>
                                                <Binding Path="Type" Converter="{StaticResource TextBoxConverter}" >
                                                    <Binding.ConverterParameter>
                                                        <autoclicker:InstructionType>KEYBOARD</autoclicker:InstructionType>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Condition.Binding>
                                            <Condition.Value>
                                                <core:Boolean>False</core:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                        <Condition>
                                            <Condition.Binding>
                                                <Binding Path="Type" Converter="{StaticResource TextBoxConverter}" >
                                                    <Binding.ConverterParameter>
                                                        <autoclicker:InstructionType>END_LOOP</autoclicker:InstructionType>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Condition.Binding>
                                            <Condition.Value>
                                                <core:Boolean>False</core:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="Transparent" />
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="#" x:Name="ClickCountColumn"  Binding="{Binding Repetitions}" Width="1*">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="InstructionsDataGrid_PreviewMouseLeftButtonDown"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition>
                                            <Condition.Binding>
                                                <Binding Path="Type" Converter="{StaticResource TextBoxConverter}" >
                                                    <Binding.ConverterParameter>
                                                        <autoclicker:InstructionType>CLICK</autoclicker:InstructionType>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Condition.Binding>
                                            <Condition.Value>
                                                <core:Boolean>False</core:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                        <Condition>
                                            <Condition.Binding>
                                                <Binding Path="Type" Converter="{StaticResource TextBoxConverter}" >
                                                    <Binding.ConverterParameter>
                                                        <autoclicker:InstructionType>WHEEL</autoclicker:InstructionType>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Condition.Binding>
                                            <Condition.Value>
                                                <core:Boolean>False</core:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                        <Condition>
                                            <Condition.Binding>
                                                <Binding Path="Type" Converter="{StaticResource TextBoxConverter}" >
                                                    <Binding.ConverterParameter>
                                                        <autoclicker:InstructionType>DELAY</autoclicker:InstructionType>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Condition.Binding>
                                            <Condition.Value>
                                                <core:Boolean>False</core:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                        <Condition>
                                            <Condition.Binding>
                                                <Binding Path="Type" Converter="{StaticResource TextBoxConverter}" >
                                                    <Binding.ConverterParameter>
                                                        <autoclicker:InstructionType>DRAG</autoclicker:InstructionType>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Condition.Binding>
                                            <Condition.Value>
                                                <core:Boolean>False</core:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                        <Condition>
                                            <Condition.Binding>
                                                <Binding Path="Type" Converter="{StaticResource TextBoxConverter}" >
                                                    <Binding.ConverterParameter>
                                                        <autoclicker:InstructionType>KEYBOARD</autoclicker:InstructionType>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Condition.Binding>
                                            <Condition.Value>
                                                <core:Boolean>False</core:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                        <Condition>
                                            <Condition.Binding>
                                                <Binding Path="Type" Converter="{StaticResource TextBoxConverter}" >
                                                    <Binding.ConverterParameter>
                                                        <autoclicker:InstructionType>LOOP</autoclicker:InstructionType>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Condition.Binding>
                                            <Condition.Value>
                                                <core:Boolean>False</core:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="Transparent" />
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                
                <DataGridTemplateColumn Header="Button" x:Name="ButtonColumn" Width="*" MinWidth="80">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox SelectedValue="{Binding Path=Button, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" ItemsSource="{Binding Source={StaticResource ButtonTypes}}"/>
                            <DataTemplate.Resources>
                                <Style TargetType="ComboBox">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition>
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" >
                                                            <Binding.ConverterParameter>
                                                                <autoclicker:InstructionType>CLICK</autoclicker:InstructionType>
                                                            </Binding.ConverterParameter>
                                                        </Binding>
                                                    </Condition.Binding>
                                                    <Condition.Value>
                                                        <core:Boolean>False</core:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                                <Condition>
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" >
                                                            <Binding.ConverterParameter>
                                                                <autoclicker:InstructionType>DRAG</autoclicker:InstructionType>
                                                            </Binding.ConverterParameter>
                                                        </Binding>
                                                    </Condition.Binding>
                                                    <Condition.Value>
                                                        <core:Boolean>False</core:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Foreground" Value="Transparent" />
                                            <Setter Property="IsEnabled" Value="False" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataTemplate.Resources>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="X" x:Name="XColumn" TextBlock.TextAlignment="Center" Binding="{Binding X}" Width="*" MinWidth="50">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="InstructionsDataGrid_PreviewMouseLeftButtonDown"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition>
                                            <Condition.Binding>
                                                <Binding Path="Type" Converter="{StaticResource TextBoxConverter}" >
                                                    <Binding.ConverterParameter>
                                                        <autoclicker:InstructionType>CLICK</autoclicker:InstructionType>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Condition.Binding>
                                            <Condition.Value>
                                                <core:Boolean>False</core:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                        <Condition>
                                            <Condition.Binding>
                                                <Binding Path="Type" Converter="{StaticResource TextBoxConverter}" >
                                                    <Binding.ConverterParameter>
                                                        <autoclicker:InstructionType>WHEEL</autoclicker:InstructionType>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Condition.Binding>
                                            <Condition.Value>
                                                <core:Boolean>False</core:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                        <Condition>
                                            <Condition.Binding>
                                                <Binding Path="Type" Converter="{StaticResource TextBoxConverter}" >
                                                    <Binding.ConverterParameter>
                                                        <autoclicker:InstructionType>DRAG</autoclicker:InstructionType>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Condition.Binding>
                                            <Condition.Value>
                                                <core:Boolean>False</core:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="Transparent" />
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Y" x:Name="YColumn"  Binding="{Binding Y}" Width="*" MinWidth="50">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="InstructionsDataGrid_PreviewMouseLeftButtonDown"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition>
                                            <Condition.Binding>
                                                <Binding Path="Type" Converter="{StaticResource TextBoxConverter}" >
                                                    <Binding.ConverterParameter>
                                                        <autoclicker:InstructionType>CLICK</autoclicker:InstructionType>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Condition.Binding>
                                            <Condition.Value>
                                                <core:Boolean>False</core:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                        <Condition>
                                            <Condition.Binding>
                                                <Binding Path="Type" Converter="{StaticResource TextBoxConverter}" >
                                                    <Binding.ConverterParameter>
                                                        <autoclicker:InstructionType>WHEEL</autoclicker:InstructionType>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Condition.Binding>
                                            <Condition.Value>
                                                <core:Boolean>False</core:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                        <Condition>
                                            <Condition.Binding>
                                                <Binding Path="Type" Converter="{StaticResource TextBoxConverter}" >
                                                    <Binding.ConverterParameter>
                                                        <autoclicker:InstructionType>DRAG</autoclicker:InstructionType>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Condition.Binding>
                                            <Condition.Value>
                                                <core:Boolean>False</core:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="Transparent" />
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="End X" x:Name="DragXColumn"  Binding="{Binding EndX}" Width="*" MinWidth="50">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="InstructionsDataGrid_PreviewMouseLeftButtonDown"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition>
                                            <Condition.Binding>
                                                <Binding Path="Type" Converter="{StaticResource TextBoxConverter}" >
                                                    <Binding.ConverterParameter>
                                                        <autoclicker:InstructionType>DRAG</autoclicker:InstructionType>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Condition.Binding>
                                            <Condition.Value>
                                                <core:Boolean>False</core:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="Transparent" />
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="End Y" x:Name="DragYColumn"  Binding="{Binding EndY}" Width="*" MinWidth="50">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="InstructionsDataGrid_PreviewMouseLeftButtonDown"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition>
                                            <Condition.Binding>
                                                <Binding Path="Type" Converter="{StaticResource TextBoxConverter}" >
                                                    <Binding.ConverterParameter>
                                                        <autoclicker:InstructionType>DRAG</autoclicker:InstructionType>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Condition.Binding>
                                            <Condition.Value>
                                                <core:Boolean>False</core:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="Transparent" />
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Wheel" x:Name="WheelColumn"  Binding="{Binding WheelDelta}" Width="*" MinWidth="50">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="InstructionsDataGrid_PreviewMouseLeftButtonDown"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition>
                                            <Condition.Binding>
                                                <Binding Path="Type" Converter="{StaticResource TextBoxConverter}" >
                                                    <Binding.ConverterParameter>
                                                        <autoclicker:InstructionType>WHEEL</autoclicker:InstructionType>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Condition.Binding>
                                            <Condition.Value>
                                                <core:Boolean>False</core:Boolean>
                                            </Condition.Value>
                                        </Condition>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="Transparent" />
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>

                <DataGridTemplateColumn Header="Shift" x:Name="ShiftColumn" MinWidth="35" MaxWidth="35">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Shift}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <DataTemplate.Resources>
                                <Style TargetType="CheckBox">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition>
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" >
                                                            <Binding.ConverterParameter>
                                                                <autoclicker:InstructionType>CLICK</autoclicker:InstructionType>
                                                            </Binding.ConverterParameter>
                                                        </Binding>
                                                    </Condition.Binding>
                                                    <Condition.Value>
                                                        <core:Boolean>False</core:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                                <Condition>
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" >
                                                            <Binding.ConverterParameter>
                                                                <autoclicker:InstructionType>DRAG</autoclicker:InstructionType>
                                                            </Binding.ConverterParameter>
                                                        </Binding>
                                                    </Condition.Binding>
                                                    <Condition.Value>
                                                        <core:Boolean>False</core:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                                <Condition>
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" >
                                                            <Binding.ConverterParameter>
                                                                <autoclicker:InstructionType>KEYBOARD</autoclicker:InstructionType>
                                                            </Binding.ConverterParameter>
                                                        </Binding>
                                                    </Condition.Binding>
                                                    <Condition.Value>
                                                        <core:Boolean>False</core:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                                <Condition>
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" >
                                                            <Binding.ConverterParameter>
                                                                <autoclicker:InstructionType>WHEEL</autoclicker:InstructionType>
                                                            </Binding.ConverterParameter>
                                                        </Binding>
                                                    </Condition.Binding>
                                                    <Condition.Value>
                                                        <core:Boolean>False</core:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Foreground" Value="Transparent" />
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataTemplate.Resources>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Ctrl" x:Name="CtrlColumn" MinWidth="35" MaxWidth="35">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Ctrl}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <DataTemplate.Resources>
                                <Style TargetType="CheckBox">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition>
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" >
                                                            <Binding.ConverterParameter>
                                                                <autoclicker:InstructionType>CLICK</autoclicker:InstructionType>
                                                            </Binding.ConverterParameter>
                                                        </Binding>
                                                    </Condition.Binding>
                                                    <Condition.Value>
                                                        <core:Boolean>False</core:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                                <Condition>
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" >
                                                            <Binding.ConverterParameter>
                                                                <autoclicker:InstructionType>DRAG</autoclicker:InstructionType>
                                                            </Binding.ConverterParameter>
                                                        </Binding>
                                                    </Condition.Binding>
                                                    <Condition.Value>
                                                        <core:Boolean>False</core:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                                <Condition>
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" >
                                                            <Binding.ConverterParameter>
                                                                <autoclicker:InstructionType>KEYBOARD</autoclicker:InstructionType>
                                                            </Binding.ConverterParameter>
                                                        </Binding>
                                                    </Condition.Binding>
                                                    <Condition.Value>
                                                        <core:Boolean>False</core:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                                <Condition>
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" >
                                                            <Binding.ConverterParameter>
                                                                <autoclicker:InstructionType>WHEEL</autoclicker:InstructionType>
                                                            </Binding.ConverterParameter>
                                                        </Binding>
                                                    </Condition.Binding>
                                                    <Condition.Value>
                                                        <core:Boolean>False</core:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Foreground" Value="Transparent" />
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataTemplate.Resources>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Alt" x:Name="AltColumn" MinWidth="35" MaxWidth="35">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Alt}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <DataTemplate.Resources>
                                <Style TargetType="CheckBox">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition>
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" >
                                                            <Binding.ConverterParameter>
                                                                <autoclicker:InstructionType>CLICK</autoclicker:InstructionType>
                                                            </Binding.ConverterParameter>
                                                        </Binding>
                                                    </Condition.Binding>
                                                    <Condition.Value>
                                                        <core:Boolean>False</core:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                                <Condition>
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" >
                                                            <Binding.ConverterParameter>
                                                                <autoclicker:InstructionType>DRAG</autoclicker:InstructionType>
                                                            </Binding.ConverterParameter>
                                                        </Binding>
                                                    </Condition.Binding>
                                                    <Condition.Value>
                                                        <core:Boolean>False</core:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                                <Condition>
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" >
                                                            <Binding.ConverterParameter>
                                                                <autoclicker:InstructionType>KEYBOARD</autoclicker:InstructionType>
                                                            </Binding.ConverterParameter>
                                                        </Binding>
                                                    </Condition.Binding>
                                                    <Condition.Value>
                                                        <core:Boolean>False</core:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                                <Condition>
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" >
                                                            <Binding.ConverterParameter>
                                                                <autoclicker:InstructionType>WHEEL</autoclicker:InstructionType>
                                                            </Binding.ConverterParameter>
                                                        </Binding>
                                                    </Condition.Binding>
                                                    <Condition.Value>
                                                        <core:Boolean>False</core:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Foreground" Value="Transparent" />
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataTemplate.Resources>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Key" x:Name="KeyColumn" Width="3*" MinWidth="170">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox SelectedValue="{Binding Path=Key, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" ItemsSource="{Binding Source={StaticResource Keys}}" MinWidth="170"/>
                            <DataTemplate.Resources>
                                <Style TargetType="ComboBox">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition>
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" >
                                                            <Binding.ConverterParameter>
                                                                <autoclicker:InstructionType>KEYBOARD</autoclicker:InstructionType>
                                                            </Binding.ConverterParameter>
                                                        </Binding>
                                                    </Condition.Binding>
                                                    <Condition.Value>
                                                        <core:Boolean>False</core:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Foreground" Value="Transparent" />
                                            <Setter Property="IsEnabled" Value="False" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataTemplate.Resources>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>

        </DataGrid>
    </DockPanel>
    <!--</Border>-->
</Window>