<Window x:Class="AutoClicker.MainWindow"
        x:Name="mainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:core="clr-namespace:System;assembly=mscorlib"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:autoclicker="clr-namespace:AutoClicker"
        mc:Ignorable="d"
        Title="Auto Clicker" Height="500" Width="1100" Background="White">

    <Window.Resources>
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <!--<Style x:Name="IsFieldEnabled" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="White" />
            <Setter Property="Foreground" Value="Transparent" />
            <Setter Property="IsEnabled" Value="True" />
            <Setter Property="Visibility" Value="Visible" />
        </Style>
        <Style x:Name="IsFieldDisabled" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="Transparent" />
            <Setter Property="IsEnabled" Value="False" />
            <Setter Property="Visibility" Value="Hidden" />
        </Style>-->
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Name="TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />

            <Setter Property="Foreground" Value="Black" />
            <Setter Property="IsEnabled" Value="True" />
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="IsEnabled" Value="True" />
        </Style>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="IsEnabled" Value="True" />
        </Style>
        <Style TargetType="DataGridCell">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <autoclicker:ValueToEqualsParameterConverter x:Key="TextBoxConverter"/>
        <autoclicker:ComboBoxConverter x:Key="ComboBoxConverter"/>
        <ObjectDataProvider x:Key="Types" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="autoclicker:InstructionType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="Keys" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="autoclicker:VirtualKeyCode"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="ButtonTypes" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="autoclicker:ButtonType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="MovementTypes" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="autoclicker:MovementType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="HotkeyStates" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="autoclicker:HotkeyState"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>

    <!--<Border Padding="5 0 5 5">-->
    <DockPanel LastChildFill="True">

        <Grid DockPanel.Dock="Top">
            <Rectangle Height="0.5" Fill="Black"/>
        </Grid>
        <Menu DockPanel.Dock="Top" Padding="0 2" >
            <MenuItem Header="_File">
                <MenuItem Header="_Open" Click="Open_Click"/>
                <MenuItem Header="_Save" Click="Save_Click"/>
                <Separator/>
                <MenuItem Header="_Close" Click="Close_Click"/>
            </MenuItem>
            <!--<Separator/>-->
            <MenuItem Header="_Edit">
                <MenuItem Header="_Delay">
                    <Grid Width="100">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Minimum" Grid.Column="0"/>
                        <TextBox Margin="10 0 0 0" Padding="1" HorizontalAlignment="Stretch" Grid.Column="1" Text="{Binding Path=GlobalDelay, ElementName=mainWindow}"/>
                    </Grid>
                    <Grid Width="100">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Random" Grid.Column="0"/>
                        <TextBox Margin="10 0 0 0" Padding="1" HorizontalAlignment="Stretch" Grid.Column="10" Text="{Binding Path=GlobalRandomDelay, ElementName=mainWindow}"/>
                    </Grid>
                </MenuItem>
                <MenuItem Header="_Repetitions">
                    <Grid Width="100">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Minimum" Grid.Column="0"/>
                        <TextBox Margin="10 0 0 0" Padding="1" HorizontalAlignment="Stretch" Grid.Column="1" Text="{Binding Path=GlobalRepetitions, ElementName=mainWindow}"/>
                    </Grid>
                    <Grid Width="100">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Random" Grid.Column="0"/>
                        <TextBox Margin="10 0 0 0" Padding="1" HorizontalAlignment="Stretch" Grid.Column="10" Text="{Binding Path=GlobalRandomRepetitions, ElementName=mainWindow}"/>
                    </Grid>
                </MenuItem>
                <MenuItem Header="_Speed">
                    <Grid Width="100">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Minimum" Grid.Column="0"/>
                        <TextBox Margin="10 0 0 0" Padding="1" HorizontalAlignment="Stretch" Grid.Column="1" Text="{Binding Path=GlobalSpeed, ElementName=mainWindow}"/>
                    </Grid>
                    <Grid Width="100">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Random" Grid.Column="0"/>
                        <TextBox Margin="10 0 0 0" Padding="1" HorizontalAlignment="Stretch" Grid.Column="10" Text="{Binding Path=GlobalRandomSpeed, ElementName=mainWindow}"/>
                    </Grid>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Movement Type" ItemsSource="{Binding Source={StaticResource MovementTypes}}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <EventSetter Event="Click" Handler="MovementType_Click" />
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <MenuItem Header="_Position">
                    <Grid Width="100">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="X Radius" Grid.Column="0"/>
                        <TextBox Margin="10 0 0 0" Padding="1" HorizontalAlignment="Stretch" Grid.Column="1" Text="{Binding Path=GlobalRandomX, ElementName=mainWindow}"/>
                    </Grid>
                    <Grid Width="100">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Y Radius" Grid.Column="0"/>
                        <TextBox Margin="10 0 0 0" Padding="1" HorizontalAlignment="Stretch" Grid.Column="10" Text="{Binding Path=GlobalRandomY, ElementName=mainWindow}"/>
                    </Grid>
                </MenuItem>
                <MenuItem Header="_Drag">
                    <Grid Width="100">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="X Radius" Grid.Column="0"/>
                        <TextBox Margin="10 0 0 0" Padding="1" HorizontalAlignment="Stretch" Grid.Column="1" Text="{Binding Path=GlobalRandomDragX, ElementName=mainWindow}"/>
                    </Grid>
                    <Grid Width="100">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Y Radius" Grid.Column="0"/>
                        <TextBox Margin="10 0 0 0" Padding="1" HorizontalAlignment="Stretch" Grid.Column="10" Text="{Binding Path=GlobalRandomDragY, ElementName=mainWindow}"/>
                    </Grid>
                </MenuItem>
                <MenuItem Header="_Wheel">
                    <Grid Width="100">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Minimum" Grid.Column="0"/>
                        <TextBox Margin="10 0 0 0" Padding="1" HorizontalAlignment="Stretch" Grid.Column="1" Text="{Binding Path=GlobalWheel, ElementName=mainWindow}"/>
                    </Grid>
                    <Grid Width="100">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Random" Grid.Column="0"/>
                        <TextBox Margin="10 0 0 0" Padding="1" HorizontalAlignment="Stretch" Grid.Column="10" Text="{Binding Path=GlobalRandomWheel, ElementName=mainWindow}"/>
                    </Grid>
                </MenuItem>
                <Separator/>
                <MenuItem Header="_Hotkeys">
                    <MenuItem Header="Ctrl" ItemsSource="{Binding Source={StaticResource HotkeyStates}}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <EventSetter Event="Click" Handler="Ctrl_Click" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                </MenuItem>
                <Separator/>
                <MenuItem Header="_Clear" Click="Clear_Click"/>
            </MenuItem>
        </Menu>
        <Grid DockPanel.Dock="Top">
            <Rectangle Height="0.5" Fill="Black"/>
        </Grid>

        <Grid DockPanel.Dock="Top" Margin="5 10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="0.5*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Horizontal" Grid.Column="0" VerticalAlignment="Center">
                <ToggleButton x:Name="PlayButton" BorderThickness="0" Background="Transparent" IsChecked="{Binding ElementName=mainWindow, Path=IsPlaying, Mode=TwoWay}" Padding="2" Margin="5 0" Width="35" Height="35">
                    <Image Source="Images/play.png" RenderOptions.BitmapScalingMode="HighQuality">
                        <Image.ToolTip>
                            <ToolTip>
                                <TextBlock Text="Start playing the script."/>
                            </ToolTip>
                        </Image.ToolTip>
                    </Image>
                </ToggleButton>
                <ToggleButton x:Name="RecordButton" BorderThickness="0" Background="Transparent" IsChecked="{Binding ElementName=mainWindow, Path=IsRecording, Mode=TwoWay}" Padding="2" Margin="5 0" Width="35" Height="35">
                    <Image Source="Images/record2.png" RenderOptions.BitmapScalingMode="HighQuality">
                        <Image.ToolTip>
                            <ToolTip>
                                <TextBlock Text="Start recording some instructions."/>
                            </ToolTip>
                        </Image.ToolTip>
                    </Image>
                </ToggleButton>
                <ToggleButton x:Name="WithDelayButton" BorderThickness="0" Background="Transparent" IsChecked="{Binding ElementName=mainWindow, Path=WithDelay, Mode=TwoWay}" Padding="2" Margin="5 0" Width="35" Height="35">
                    <Image Source="Images/stopwatch2.png" RenderOptions.BitmapScalingMode="HighQuality">
                        <Image.ToolTip>
                            <ToolTip>
                                <TextBlock Text="Enable delay measurement between instructions."/>
                            </ToolTip>
                        </Image.ToolTip>
                    </Image>
                </ToggleButton>
            </StackPanel>

            <TextBlock Foreground="Black" FontSize="16" Grid.Column="1" Text="Auto Clicker" FontWeight="Bold" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center"/>

            <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                <TextBox x:Name="RepetitionsTextBox" IsEnabled="False" TextChanged="RepetitionsTextBox_TextChanged" Text="5" MaxLength="5" VerticalAlignment="Center" Width="40" TextAlignment="Right" Padding="2"/>

                <ToggleButton x:Name="InfiniteButton" BorderThickness="0" Background="Transparent" IsChecked="{Binding ElementName=mainWindow, Path=Infinite, Mode=TwoWay}" Padding="2" Margin="5 0" Width="35" Height="35">
                    <Image Source="Images/infinity.png" RenderOptions.BitmapScalingMode="HighQuality">
                        <Image.ToolTip>
                            <ToolTip>
                                <TextBlock Text="Enable infinite looping."/>
                            </ToolTip>
                        </Image.ToolTip>
                    </Image>
                </ToggleButton>
                <!--<CheckBox x:Name="InfiniteCheckBox" IsChecked="{Binding ElementName=mainWindow, Path=Infinite, Mode=TwoWay}" VerticalAlignment="Center" Margin="5 0" Content="Infinite"/>-->
            </StackPanel>
        </Grid>

        <DataGrid DockPanel.Dock="Top" x:Name="InstructionsDataGrid" 
                      AutoGenerateColumns="False"
                      CanUserAddRows="false"
                      CanUserSortColumns="False"
                      CanUserReorderColumns="False"
                      VerticalScrollBarVisibility="Visible"
                      ItemsSource="{Binding ElementName=mainWindow, Path=Instructions}"
                      AllowDrop="True"
                      Drop="InstructionsDataGrid_Drop"
                      Margin="5"
                      >

            <ItemsControl.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="_Mouse">
                        <MenuItem Header="_Click" Click="AddClick_Click"/>
                        <MenuItem Header="_Move and Click" Click="AddMoveAndClickClick_Click"/>
                        <MenuItem Header="_Drag" Click="AddDrag_Click"/>
                        <MenuItem Header="_Wheel" Click="AddWheel_Click"/>
                    </MenuItem>
                    <MenuItem Header="_Keyboard" Click="AddKeyboard_Click"/>
                    <MenuItem Header="_Loop">
                        <MenuItem Header="_Start" Click="AddLoop_Click"/>
                        <MenuItem Header="_End" Click="AddEndLoop_Click"/>
                    </MenuItem>
                    <MenuItem Header="_Delay" Click="AddDelay_Click"/>
                    <Separator/>
                    <MenuItem Header="Duplicate" Click="DuplicateFromContextMenu_Click"/>
                    <MenuItem Header="Delete" Click="DeleteFromContextMenu_Click"/>
                </ContextMenu>
            </ItemsControl.ContextMenu>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsRunning}" Value="True">
                            <Setter Property="Background" Value="Black"></Setter>
                            <Setter Property="Foreground" Value="White"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsRunning}" Value="False">
                            <Setter Property="Background" Value="White"></Setter>
                            <Setter Property="Foreground" Value="Black"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Type" x:Name="TypeColumn" Width="*"  MinWidth="100" TextElement.FontStretch="Expanded">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox SelectedValue="{Binding Path=Type, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" ItemsSource="{Binding Source={StaticResource Types}}" MinWidth="100"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Delay" x:Name="DelayColumn"  Width="*" MinWidth="90">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="4*"/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Text="{Binding Path=Delay, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Column="0" />
                                <TextBox Text="{Binding Path=RandomDelay, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Column="1" />
                            </Grid>
                            <DataTemplate.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    <Setter Property="VerticalAlignment" Value="Stretch" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />

                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="IsEnabled" Value="True" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="CLICK"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="M_CLICK"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="DRAG"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="WHEEL"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="KEYBOARD"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="END_LOOP"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="DELAY"/>
                                                    </Condition.Binding>
                                                </Condition>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Foreground" Value="Transparent" />
                                            <Setter Property="IsEnabled" Value="False" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataTemplate.Resources>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>

                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="#" x:Name="ClickCountColumn"  Width="*" MinWidth="50">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Text="{Binding Path=Repetitions, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Column="0" />
                                <TextBox Text="{Binding Path=RandomRepetitions, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Column="1" />
                            </Grid>
                            <DataTemplate.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    <Setter Property="VerticalAlignment" Value="Stretch" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />

                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="IsEnabled" Value="True" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="CLICK"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="M_CLICK"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="DRAG"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="WHEEL"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="KEYBOARD"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="LOOP"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="DELAY"/>
                                                    </Condition.Binding>
                                                </Condition>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Foreground" Value="Transparent" />
                                            <Setter Property="IsEnabled" Value="False" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataTemplate.Resources>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Speed" x:Name="SpeedColumn"  Width="*" MinWidth="50">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Text="{Binding Path=Speed, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Delay=250}" Grid.Column="0"/>
                                <TextBox Text="{Binding Path=RandomSpeed, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Delay=250}" Grid.Column="1" />
                            </Grid>
                            <DataTemplate.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    <Setter Property="VerticalAlignment" Value="Stretch" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />

                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="IsEnabled" Value="True" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="M_CLICK"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="DRAG"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="WHEEL"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="KEYBOARD"/>
                                                    </Condition.Binding>
                                                </Condition>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Foreground" Value="Transparent" />
                                            <Setter Property="IsEnabled" Value="False" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataTemplate.Resources>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Button" x:Name="ButtonColumn" Width="*" MinWidth="80">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox SelectedValue="{Binding Path=Button, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" ItemsSource="{Binding Source={StaticResource ButtonTypes}}"/>
                            <DataTemplate.Resources>
                                <Style TargetType="ComboBox">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="CLICK"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="M_CLICK"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="DRAG"/>
                                                    </Condition.Binding>
                                                </Condition>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Foreground" Value="Transparent" />
                                            <Setter Property="IsEnabled" Value="False" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataTemplate.Resources>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Movement" x:Name="MovementTypeColumn" Width="*" MinWidth="80">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox SelectedValue="{Binding Path=Movement, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" ItemsSource="{Binding Source={StaticResource MovementTypes}}"/>
                            <DataTemplate.Resources>
                                <Style TargetType="ComboBox">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="M_CLICK"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="DRAG"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="WHEEL"/>
                                                    </Condition.Binding>
                                                </Condition>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Foreground" Value="Transparent" />
                                            <Setter Property="IsEnabled" Value="False" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataTemplate.Resources>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Position" x:Name="PositionColumn"  Width="*" MinWidth="120">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Text="{Binding Path=X, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Column="0" />
                                <TextBox Text="{Binding Path=RandomX, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Column="1" />
                                <TextBox Text="{Binding Path=Y, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Column="2" />
                                <TextBox Text="{Binding Path=RandomY, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Column="3" />
                            </Grid>
                            <DataTemplate.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    <Setter Property="VerticalAlignment" Value="Stretch" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />

                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="IsEnabled" Value="True" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="M_CLICK"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="DRAG"/>
                                                    </Condition.Binding>
                                                </Condition>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Foreground" Value="Transparent" />
                                            <Setter Property="IsEnabled" Value="False" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataTemplate.Resources>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Drag" x:Name="DragColumn"  Width="*" MinWidth="120">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Text="{Binding Path=EndX, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Column="0" />
                                <TextBox Text="{Binding Path=RandomEndX, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Column="1"/>
                                <TextBox Text="{Binding Path=EndY, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Column="2" />
                                <TextBox Text="{Binding Path=RandomEndY, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Column="3" />
                            </Grid>
                            <DataTemplate.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    <Setter Property="VerticalAlignment" Value="Stretch" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />

                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="IsEnabled" Value="True" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="DRAG"/>
                                                    </Condition.Binding>
                                                </Condition>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Foreground" Value="Transparent" />
                                            <Setter Property="IsEnabled" Value="False" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataTemplate.Resources>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Wheel" x:Name="WheelColumn"  Width="*" MinWidth="75">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Text="{Binding Path=Wheel, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Column="0" />
                                <TextBox Text="{Binding Path=RandomWheel, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Column="1" />
                            </Grid>
                            <DataTemplate.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    <Setter Property="VerticalAlignment" Value="Stretch" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />

                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="IsEnabled" Value="True" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="WHEEL"/>
                                                    </Condition.Binding>
                                                </Condition>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Foreground" Value="Transparent" />
                                            <Setter Property="IsEnabled" Value="False" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataTemplate.Resources>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Shift" x:Name="ShiftColumn" MinWidth="35" MaxWidth="35">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Shift}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <DataTemplate.Resources>
                                <Style TargetType="CheckBox">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="CLICK"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="M_CLICK"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="DRAG"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="KEYBOARD"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="WHEEL"/>
                                                    </Condition.Binding>
                                                </Condition>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Foreground" Value="Transparent" />
                                            <Setter Property="IsEnabled" Value="False" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataTemplate.Resources>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Ctrl" x:Name="CtrlColumn" MinWidth="35" MaxWidth="35">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Ctrl}" VerticalAlignment="Center" HorizontalAlignment="Center"                  />

                            <DataTemplate.Resources>
                                <Style TargetType="CheckBox">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="CLICK"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="M_CLICK"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="DRAG"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="KEYBOARD"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="WHEEL"/>
                                                    </Condition.Binding>
                                                </Condition>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Foreground" Value="Transparent" />
                                            <Setter Property="IsEnabled" Value="False" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataTemplate.Resources>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Alt" x:Name="AltColumn" MinWidth="35" MaxWidth="35">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Alt}" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                            <DataTemplate.Resources>
                                <Style TargetType="CheckBox">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="CLICK"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="M_CLICK"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="DRAG"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="KEYBOARD"/>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="WHEEL"/>
                                                    </Condition.Binding>
                                                </Condition>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Foreground" Value="Transparent" />
                                            <Setter Property="IsEnabled" Value="False" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataTemplate.Resources>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Key" x:Name="KeyColumn" Width="3*" MinWidth="170">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox SelectedValue="{Binding Path=Key, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" ItemsSource="{Binding Source={StaticResource Keys}}" MinWidth="170"/>
                            <DataTemplate.Resources>
                                <Style TargetType="ComboBox">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Value="False">
                                                    <Condition.Binding>
                                                        <Binding Path="Type" Converter="{StaticResource ComboBoxConverter}" ConverterParameter="KEYBOARD"/>
                                                    </Condition.Binding>
                                                </Condition>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Foreground" Value="Transparent" />
                                            <Setter Property="IsEnabled" Value="False" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataTemplate.Resources>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>

        </DataGrid>
    </DockPanel>
    <!--</Border>-->
</Window>